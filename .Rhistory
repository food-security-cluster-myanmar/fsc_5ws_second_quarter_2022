geom_step(size = 1.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_y_continuous(labels = comma) +
geom_vline(colour = "blue", lty = 2, xintercept = as.numeric(as.Date("2022-06-01")), alpha = .5) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2022-03-01")), alpha = .5) +
facet_wrap(~ activity_red, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 5),
strip.text = element_text(size = 6, face = "bold"),
strip.background = element_rect(fill = "#212121")) +
labs(x = "Month",
y = "Cumulative beneficiary frequencies",
title = "Monthly progress by activity, 2021 - 2022 (Q2)",
subtitle = "Figures are in cumulative beneficiary frequencies reached; grey line is 2021 progress") +
theme(plot.title = element_text(size = 12))
fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
mutate(date = date + years(1)) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", ""))
fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
mutate(date = date + years(1)) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>% count(activity_red)
act_line_2021 <- fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
mutate(date = date + years(1)) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>% count(activity_red)
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
# rbind(fsc_2021 %>%
#         # filter(unique_beneficiaries == "Yes") %>%
#         group_by(date, activity_red) %>%
#         summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(activity_red) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>%
filter(activity_red %out% c("fishery kits",
"community infrastructure and equipment")) %>%
ggplot(aes(x = date, y = cum_ben, colour = activity_red)) +
geom_step(data = act_line_2021,
aes(x = date,
y = cum_ben),
colour = "grey",
size = 4,
alpha = .5) +
geom_step(size = 1.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_y_continuous(labels = comma) +
geom_vline(colour = "blue", lty = 2, xintercept = as.numeric(as.Date("2022-06-01")), alpha = .5) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2022-03-01")), alpha = .5) +
facet_wrap(~ activity_red, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 5),
strip.text = element_text(size = 6, face = "bold"),
strip.background = element_rect(fill = "#212121")) +
labs(x = "Month",
y = "Cumulative beneficiary frequencies",
title = "Monthly progress by activity, 2021 - 2022 (Q2)",
subtitle = "Figures are in cumulative beneficiary frequencies reached; grey line is 2021 progress") +
theme(plot.title = element_text(size = 12))
act_line_2021 <- fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
mutate(date = date + years(1)) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>%
filter(activity_red %out% c("fishery kits",
"community infrastructure and equipment"))
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
# rbind(fsc_2021 %>%
#         # filter(unique_beneficiaries == "Yes") %>%
#         group_by(date, activity_red) %>%
#         summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(activity_red) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>%
filter(activity_red %out% c("fishery kits",
"community infrastructure and equipment")) %>%
ggplot(aes(x = date, y = cum_ben, colour = activity_red)) +
geom_step(data = act_line_2021,
aes(x = date,
y = cum_ben),
colour = "grey",
size = 4,
alpha = .5) +
geom_step(size = 1.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_y_continuous(labels = comma) +
geom_vline(colour = "blue", lty = 2, xintercept = as.numeric(as.Date("2022-06-01")), alpha = .5) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2022-03-01")), alpha = .5) +
facet_wrap(~ activity_red, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 5),
strip.text = element_text(size = 6, face = "bold"),
strip.background = element_rect(fill = "#212121")) +
labs(x = "Month",
y = "Cumulative beneficiary frequencies",
title = "Monthly progress by activity, 2021 - 2022 (Q2)",
subtitle = "Figures are in cumulative beneficiary frequencies reached; grey line is 2021 progress") +
theme(plot.title = element_text(size = 12))
fsc %>%
select(date, org_code, beneficiaries = new_beneficiaries, location, admin3_pcode) %>%
group_by(location, admin3_pcode) %>%
slice(which.max(beneficiaries)) %>%
group_by(org_code, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries, names_prefix = "ben_") %>%
rowwise() %>%
mutate(total_ben = sum(ben_q1, ben_q2, na.rm = TRUE)) %>%
ungroup() %>%
mutate(rank_q1 = dense_rank(-ben_q1),
rank_q2 = dense_rank(-ben_q2)) %>%
arrange(desc(ben_2022)) %>%
select(org_code, ben_q1, rank_q1, ben_q2, rank_q2, total_ben) %>%
head(15) %>%
kable(caption = "Top implementing partners by beneficiaries reached in 2022 (Q1 & Q2)", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(location, admin3_pcode) %>%
slice(which.max(beneficiaries)) %>%
group_by(org_code, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries, names_prefix = "ben_") %>%
rowwise() %>%
mutate(total_ben = sum(ben_q1, ben_q2, na.rm = TRUE)) %>%
ungroup() %>%
mutate(rank_q1 = dense_rank(-ben_q1),
rank_q2 = dense_rank(-ben_q2)) %>%
arrange(desc(ben_2022)) %>%
select(org_code, ben_q1, rank_q1, ben_q2, rank_q2, total_ben) %>%
head(15) %>%
kable(caption = "Top implementing partners by beneficiaries reached in 2022 (Q1 & Q2)", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(location, admin3_pcode) %>%
slice(which.max(beneficiaries)) %>%
group_by(org_code, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries, names_prefix = "ben_") %>%
rowwise() %>%
mutate(total_ben = sum(ben_q1, ben_q2, na.rm = TRUE)) %>%
ungroup() %>%
mutate(rank_q1 = dense_rank(-ben_q1),
rank_q2 = dense_rank(-ben_q2)) %>%
arrange(desc(ben_q2)) %>%
select(org_code, ben_q1, rank_q1, ben_q2, rank_q2, total_ben) %>%
head(15) %>%
kable(caption = "Top implementing partners by beneficiaries reached in 2022 (Q1 & Q2)", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(location, admin3_pcode) %>%
slice(which.max(beneficiaries)) %>%
group_by(org_code, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries, names_prefix = "ben_") %>%
rowwise() %>%
mutate(total_ben = sum(ben_q1, ben_q2, na.rm = TRUE)) %>%
ungroup() %>%
mutate(rank_q1 = dense_rank(-ben_q1),
rank_q2 = dense_rank(-ben_q2)) %>%
arrange(desc(total_ben)) %>%
select(org_code, ben_q1, rank_q1, ben_q2, rank_q2, total_ben) %>%
head(15) %>%
kable(caption = "Top implementing partners by beneficiaries reached in 2022 (Q1 & Q2)", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
filter(quarter == "q1") %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pcode3_shape, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = beneficiaries), size = .1) +
scale_fill_viridis(direction = -1, trans = "log10",
breaks = c(100, 1000, 10000, 100000, 500000),
labels = comma,
na.value = "gray90") +
theme_void() +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key.size = unit(.7, "cm"),
plot.background = element_rect(fill = "white", colour = "white")) +
labs(title = "Beneficiaries by township, as of 2022-03-31",
subtitle = "Townships in grey do not have any partners present",
fill = "Beneficiaries") +
fsc %>%
# filter(quarter == "q2") %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pcode3_shape, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = beneficiaries), size = .1) +
scale_fill_viridis(direction = -1, trans = "log10",
breaks = c(100, 1000, 10000, 100000, 500000),
labels = comma,
na.value = "gray90") +
theme_void() +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key.size = unit(.7, "cm"),
plot.background = element_rect(fill = "white", colour = "white")) +
labs(title = "Beneficiaries by township, as of 2022-06-30",
subtitle = "Townships in grey do not have any partners present",
fill = "Beneficiaries")
ggsave("maps_q1_q2.png", dpi = 300, height = 9, width = 8, units = "in")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE), .groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
adorn_totals("row") %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc <- read_csv("./data/fsc.csv")
fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development"))
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma, trans = "log10")
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma,
breaks = c(1000, 10000, 50000, 100000, 500000))
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma,
breaks = c(100000, 500000, 1000000,
2000000, 3000000, 4000000,
5000000))
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma,
breaks = c(100000, 250000, 500000, 1000000,
2000000, 3000000))
114.55 / 5 / 2
