mutate(so = str_to_upper(so)) %>%
mutate(was_nutrition_mainstreamed_in_activity = ifelse(is.na(was_nutrition_mainstreamed_in_activity),
"No", was_nutrition_mainstreamed_in_activity),
was_nutrition_mainstreamed_in_activity = fct_relevel(was_nutrition_mainstreamed_in_activity, levels = c("Yes", "No"))) %>%
sum_ben2(so, was_nutrition_mainstreamed_in_activity) %>%
pivot_wider(names_from = so, values_from = beneficiaries) %>%
mutate(total_beneficiaries = SO1 + SO2 + SO3,
`%_beneficiaries` = round(total_beneficiaries / sum(total_beneficiaries) * 100, digits = 2)) %>%
kable(caption = "Beneficiaries by status of nutrition mainstreaming", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = state, y = beneficaries,
fill = state)) +
geom_col()
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = state, y = beneficairies,
fill = state)) +
geom_col()
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = state, y = beneficiaries,
fill = state)) +
geom_col()
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(y = state, x = beneficiaries,
fill = state)) +
geom_col()
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(y = state, x = beneficiaries,
fill = state)) +
geom_col() +
labs(fill = "",
x = "Beneficiaries",
y = "")
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma,
breaks = c(100000,
500000, 1000000,
2000000, 3000000))
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma,
breaks = c(100000,
500000, 1000000,
3000000))
fsc %>%
mutate(agricultural_activity = ifelse(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits"), "yes", "no"),
quarter = recode(quarter,
"q1" = "One",
"q2" = "Two")) %>%
group_by(agricultural_activity, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
group_by(quarter) %>%
mutate(`%beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
agricultural_activity = fct_rev(agricultural_activity)) %>%
arrange(quarter, agricultural_activity) %>%
ggplot(aes(x = beneficiaries, y = fct_rev(quarter), fill = agricultural_activity)) +
geom_col(position = position_dodge(width = .9)) +
geom_text(aes(label = `%beneficiaries`),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_manual(values = c("#D35400", "#76D7C4")) +
labs(x = "Number of beneficiary frequencies",
y = "Quarter",
fill = "agricultural\nactivity",
title = "Beneficiaries reached by agriculture and livelihoods activities") +
scale_x_continuous(labels = comma,
breaks = c(100000,
500000, 1000000,
5000000))
fsc %>%
filter(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits")) %>%
group_by(activity_red) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>% filter(str_detect(activity_red, "equipment"))
fsc %>% filter(str_detect(activity_red, "equipment")) %>%
pull(activity_description)
fsc %>%
filter(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits")) %>%
group_by(actvitity = activity_red) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(activity = fct_reorder(activity, beneficiaries),
pc = beneficiaries / sum(beneficiaries))
fsc %>%
filter(activity_red %in% c("crop, vegetable and seed kits",
"FFS and farmer training",
"IGA and small grants",
"livestock kits")) %>%
group_by(activity = activity_red) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(activity = fct_reorder(activity, beneficiaries),
pc = beneficiaries / sum(beneficiaries))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
mutate(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake"),
cat = ifelse(is.na(cat), "real", cat)) %>%
ungroup() %>%
group_by(disagg) %>%
summarise(ben_sub = sum(ben_sub)) %>%
mutate(pc = ben_sub / sum(ben_sub),
disagg = fct_relevel(disagg,
c("child_male", "child_female",
"adult_male", "adult_female",
"elderly_male", "elderly_female"))) %>%
ggplot(aes(x = disagg, y = pc, fill = disagg)) +
geom_col() +
geom_text(aes(label = percent(pc, accuracy = .1)), vjust = -.1) +
scale_y_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Disaggregation group",
y = "Percentage of all beneficiaries",
title = "Age and sex of reached beneficiaries",
subtitle = "Only 'real' values included") +
facet_wrap(~cat) +
theme(legend.position = "none")
fsc_disagg <- fsc %>%
pivot_longer(cols = c(child_male:elderly_female), names_to = "disagg", values_to = "ben_sub") %>%
left_join(tribble(
~age, ~sex, ~disagg, ~value,
"child", "male", "child_male", 0.162989989,
"child", "female", "child_female", 0.158900883,
"adult", "male", "adult_male", 0.271450831,
"adult", "female", "adult_female", 0.300444585,
"elderly", "male", "elderly_male", 0.044029423,
"elderly", "female", "elderly_female", 0.06218429
) %>%
select(disagg, census_prop = value), by = "disagg") %>%
filter(ben_sub != 0) %>%
mutate(ben_prop = ben_sub / beneficiaries,
ben_prop_compare = abs(census_prop - ben_prop) / census_prop,
same_as_census = ifelse(ben_prop_compare < 0.05, "backfilled", "real"))
fsc_disagg_values <- fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
group_by(same_as_census) %>%
summarise(ben_sub = sum(ben_sub)) %>%
adorn_percentages("col") %>%
mutate(ben_sub = round(ben_sub * 100, digits = 2))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
mutate(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake"),
cat = ifelse(is.na(cat), "real", cat)) %>%
ungroup() %>%
group_by(disagg) %>%
summarise(ben_sub = sum(ben_sub)) %>%
mutate(pc = ben_sub / sum(ben_sub),
disagg = fct_relevel(disagg,
c("child_male", "child_female",
"adult_male", "adult_female",
"elderly_male", "elderly_female"))) %>%
ggplot(aes(x = disagg, y = pc, fill = disagg)) +
geom_col() +
geom_text(aes(label = percent(pc, accuracy = .1)), vjust = -.1) +
scale_y_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Disaggregation group",
y = "Percentage of all beneficiaries",
title = "Age and sex of reached beneficiaries",
subtitle = "Only 'real' values included") +
facet_wrap(~cat) +
theme(legend.position = "none")
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
mutate(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake"),
cat = ifelse(is.na(cat), "real", cat)) %>%
ungroup() %>%
group_by(disagg) %>%
summarise(ben_sub = sum(ben_sub)) %>%
mutate(pc = ben_sub / sum(ben_sub),
disagg = fct_relevel(disagg,
c("child_male", "child_female",
"adult_male", "adult_female",
"elderly_male", "elderly_female")))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
mutate(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake"),
cat = ifelse(is.na(cat), "real", cat)) %>%
ungroup() %>%
group_by(disagg, cat) %>%
summarise(ben_sub = sum(ben_sub)) %>%
mutate(pc = ben_sub / sum(ben_sub),
disagg = fct_relevel(disagg,
c("child_male", "child_female",
"adult_male", "adult_female",
"elderly_male", "elderly_female"))) %>%
ggplot(aes(x = disagg, y = pc, fill = disagg)) +
geom_col() +
geom_text(aes(label = percent(pc, accuracy = .1)), vjust = -.1) +
scale_y_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Disaggregation group",
y = "Percentage of all beneficiaries",
title = "Age and sex of reached beneficiaries",
subtitle = "Only 'real' values included") +
facet_wrap(~ cat) +
theme(legend.position = "none")
glimspe(pin)
glimpse(pin)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(benficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted) %>%
arrange(desc(pc))
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted) %>%
arrange(desc(pc)) %>%
select(state, township, beneficiaries, fs_targeted, pc)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted,
pc = ifelse(is.infinite(pc), 0, pc)) %>%
arrange(desc(pc)) %>%
select(state, township, beneficiaries, fs_targeted, pc)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted,
pc = ifelse(is.infinite(pc), 0, pc),
gap = fs_targeted - benficiaries) %>%
arrange(desc(pc)) %>%
select(state, township, beneficiaries, fs_targeted, gap, pc)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted,
pc = ifelse(is.infinite(pc), 0, pc),
gap = fs_targeted - beneficiaries) %>%
arrange(desc(pc)) %>%
select(state, township, beneficiaries, fs_targeted, gap, pc)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(pc = beneficiaries / fs_targeted,
pc = ifelse(is.infinite(pc), 0, pc),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, beneficiaries, fs_targeted, gap, pc)
fsc %>% group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
filter(state == "Yangon")
fsc %>% group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
filter(state == "Yangon" & quarter == "q2")
fsc %>%
filter(state == "Yangon" & quarter == "q2") %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
arrange(desc(beneficiaries))
fsc %>%
filter(state == "Yangon" & quarter == "q2") %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
filter(beneficiaries != 0) u
fsc %>%
filter(state == "Yangon" & quarter == "q2") %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
filter(beneficiaries != 0) %>%
arrange(desc(beneficiaries))
fsc %>%
filter(state == "Yangon") %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
filter(state == "Yangon") %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries) %>%
arrange(desc(q2))
fsc %>%
filter(state == "Yangon") %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
arrange(desc(total))
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(total = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode, fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
select(-admin3_pcode_old)
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(total = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode, fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
select(-admin3_pcode_old)
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(total = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode, fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
ungroup() %>%
select(-admin3_pcode_old)
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(total = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode,
target = fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
ungroup() %>%
mutate(pc = beneficiaries / fs_targeted,
pc = ifelse(is.infinite(pc), 0, pc),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, q1, q2,
beneficiaries, target, gap)
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(beneficiaries = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode,
target = fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
ungroup() %>%
mutate(pc = beneficiaries / fs_targeted,
pc = ifelse(is.infinite(pc), 0, pc),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
head(20) %>%
select(state, township, q1, q2,
beneficiaries, target, gap) %>%
kable(caption = "Most overreached townships",
format.args = list(big.mark = ",")) %>%
kable_classic_2()
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(beneficiaries = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode,
target = fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
ungroup() %>%
mutate(pc = beneficiaries / target,
pc = ifelse(is.infinite(pc), 0, pc),
gap = target - beneficiaries) %>%
arrange(gap) %>%
head(20) %>%
select(state, township, q1, q2,
beneficiaries, target, gap) %>%
kable(caption = "Most overreached townships",
format.args = list(big.mark = ",")) %>%
kable_classic_2()
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(beneficiaries = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode,
target = fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
ungroup() %>%
mutate(pc = beneficiaries / target,
pc = ifelse(is.infinite(pc), 0, pc),
gap = target - beneficiaries) %>%
arrange(gap) %>%
head(20) %>%
mutate_at(vars(target, gap), ~ round(.x, digits = 0)) %>%
select(state, township, q1, q2,
beneficiaries, target, gap) %>%
kable(caption = "Most overreached townships",
format.args = list(big.mark = ",")) %>%
kable_classic_2()
fsc %>%
group_by(admin3_pcode_old, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
pivot_wider(names_from = quarter, values_from = beneficiaries,
values_fill = 0)  %>%
mutate(beneficiaries = q1 + q2) %>%
right_join(pin %>%
select(state, township, admin3_pcode,
target = fs_targeted),
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
ungroup() %>%
mutate(pc = beneficiaries / target,
pc = ifelse(is.infinite(pc), 0, pc),
gap = target - beneficiaries) %>%
arrange(gap) %>%
head(15) %>%
mutate_at(vars(target, gap), ~ round(.x, digits = 0)) %>%
select(state, township, q1, q2,
beneficiaries, target, gap) %>%
kable(caption = "Top 15 most overreached townships",
format.args = list(big.mark = ",")) %>%
kable_classic_2()
