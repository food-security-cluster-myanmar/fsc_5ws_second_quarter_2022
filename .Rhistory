# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE)
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc %>% count(activity_red
)
fsc %>% count(activity_red)
fsc %>% dplyr::count(activity_red)
library(dplyr)
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
dplyr::rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
dplyr::rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(hd = if_else(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
mutate(humanitarian_or_development =
if_else(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
dplyr::mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
dplyr::mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries))
hd_list <- fsc %>%
dplyr::group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
dplyr::mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
dplyr::mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
sc %>%
dplyr::group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
dplyr::group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries))
detach(package:plyr)
hd_list <- fsc %>%
dplyr::group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
dplyr::mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
dplyr::mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(plyr)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc <- read_csv("./data/fsc.csv")
fsc_2021 <- read_csv("./data/fsc_2021.csv")
pin <- read_csv("./data/fs_pin.csv")
detach(package:plyr)
hd_list <- fsc %>%
dplyr::group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
dplyr::mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
dplyr::mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
dplyr::rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
dplyr::rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
fsc <- read_csv("./data/fsc.csv")
fsc_2021 <- read_csv("./data/fsc_2021.csv")
pin <- read_csv("./data/fs_pin.csv")
hd_list <- fsc %>%
dplyr::group_by(humanitarian_or_development, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
dplyr::mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
dplyr::mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
dplyr::rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
dplyr::rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# Remember to load plyr before dplyr, if not all the important dplyr functions that you normally
# use will be masked.
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(plyr)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc %>%
group_by(org_code) %>%
mean(new_beneficiaries)
fsc %>%
group_by(org_code) %>%
mean(new_beneficiaries, na.rm = TRUE)
fsc %>%
group_by(org_code) %>%
{mean(.new_beneficiaries, na.rm = TRUE)}
fsc %>%
group_by(org_code) %>%
{mean(.$new_beneficiaries, na.rm = TRUE)}
fsc %>% group_by(org_code) %>%
summarise(partners = n_distinct(org_code),
beneficiaries = sum(new_beneficiaries))
fsc %>% group_by(org_code) %>%
summarise(partners = n_distinct(org_code),
beneficiaries = sum(new_beneficiaries)) %>%
mutate(mean = beneficiaries / partners)
fsc %>%
group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
{mean(.$beneficiaries, na.rm = TRUE)}
fsc %>%
group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
dplyr::group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
{mean(.$beneficiaries, na.rm = TRUE)}
fsc %>%
dplyr::group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries))
detach(package:plyr)
fsc %>%
dplyr::group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
{mean(.$beneficiaries, na.rm = TRUE)}
fsc %>%
dplyr::group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
{mean(.$beneficiaries, na.rm = TRUE)}
fsc %>% group_by(org_code) %>%
summarise(partners = n_distinct(org_code),
beneficiaries = sum(new_beneficiaries)) %>%
mutate(mean = beneficiaries / partners)
# Remember to load plyr before dplyr, if not all the important dplyr functions that you normally
# use will be masked.
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc %>%
group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
{mean(.$beneficiaries, na.rm = TRUE)}
fsc %>% group_by(org_code) %>%
summarise(partners = n_distinct(org_code),
beneficiaries = sum(new_beneficiaries)) %>%
mutate(mean = beneficiaries / partners)
fsc %>%
group_by(org_code) %>%
summarise(townships = n_distinct(admin3_pcode)) %>%
{mean(.$townships, na.rm = TRUE)}
partner_ben <- fsc %>%
group_by(org_code) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
{mean(.$beneficiaries, na.rm = TRUE)}
partner_tsp <- fsc %>%
group_by(org_code) %>%
summarise(townships = n_distinct(admin3_pcode)) %>%
{mean(.$townships, na.rm = TRUE)}
partner_scatter <- fsc %>%
group_by(org_code) %>%
summarise(states = n_distinct(state),
townships = n_distinct(admin3_pcode),
beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = townships,
text = paste0(org_code, "\n",
"states: ", states, "\n",
"townships: ", townships, "\n",
"beneficiaries: ", comma(beneficiaries, accuracy = 1)))) +
geom_vline(xintercept = partner_ben, lty = 2, colour = "red") +
geom_hline(yintercept = partner_tsp, lty = 2, colour = "red") +
geom_point(aes(size = beneficiaries), alpha = .7) +
scale_x_continuous(trans = "log", labels = comma, breaks = c(0, 100, 300, 1000, 3000, 10000, 30000, 100000, 300000)) +
scale_y_continuous(breaks = seq(0, 25, 5)) +
labs(x = "Number of beneficiaries",
y = "Number of townships",
title = "Plot of beneficiaries and townships reached, by implementing partner") +
theme(legend.position = "none")
ggplotly(partner_scatter, tooltip = c("text"), width = 820) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Beneficiaries and townships reached, by implementing partner",
"<br>",
"<sup>",
"mouse over for details; sizes indicate beneficiaries reached; red lines are means",
"</sup>")))
install.packages("xfun")
