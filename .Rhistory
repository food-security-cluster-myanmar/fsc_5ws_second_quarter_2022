total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach_q2) %>%
summarise(townships = n_distinct(admin3_pcode))
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships = n_distinct(admin3_pcode)) %>%
cbind(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships = n_distinct(admin3_pcode))
)
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_q2 = n_distinct(admin3_pcode)),
by = "reach"
)
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach"
) %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target")) %>%
select(category, range, townships_Q1, townships_Q2) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'")
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach"
) %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target")) %>%
select(category, range, townships_Q1, townships_Q2) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'") %>%
kable_classic_2("striped")
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach"
) %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target")) %>%
select(category, range, townships_Q1, townships_Q2) %>%
arrange(category) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'") %>%
kable_classic_2("striped")
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach"
) %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target")) %>%
select(category, range, townships_Q1, townships_as_of_Jun2022 = townships_Q2) %>%
arrange(category) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'") %>%
kable_classic_2("striped")
install.packages("flextable")
library(flextable)
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Humanitarian" | activity_red == "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable()
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Humanitarian" | activity_red == "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "2022 humanitarian beneficiaries")
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Humanitarian" | activity_red == "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "2022 humanitarian beneficiaries") %>%
theme_classic()
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Humanitarian" | activity_red == "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "2022 humanitarian beneficiaries") %>%
theme_zebra()
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "Percentage of beneficiaries reached by activity and delivery modality") %>%
theme_booktabs() %>%
add_footer_lines("as of 30 June 2022")
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "Percentage of beneficiaries reached by activity and delivery modality") %>%
theme_alafoli() %>%
add_footer_lines("as of 30 June 2022")
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "Percentage of beneficiaries reached by activity and delivery modality") %>%
theme_vanilla() %>%
add_footer_lines("as of 30 June 2022")
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
flextable() %>%
set_caption(caption = "Percentage of beneficiaries reached by activity and delivery modality") %>%
theme_box() %>%
add_footer_lines("as of 30 June 2022")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
footnote(general = "Only showing townships with >1% of total beneficiaries",
general_title = "")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
footnote("Only showing townships with >1% of total beneficiaries",)
