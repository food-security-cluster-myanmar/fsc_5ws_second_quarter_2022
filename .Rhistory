category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target",
category == "not_reached" ~ "0% of target")) %>%
select(category, range, townships_Q1, townships_as_of_Jun2022 = townships_Q2) %>%
arrange(category) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'") %>%
kable_classic_2("striped")
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 == 0 ~ "not_reached",
q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under"))  %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reach = case_when(total == 0 ~ "not_reached",
total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach") %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach",
"not_reached")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target",
category == "not_reached" ~ "0% of target")) %>%
select(category, range, townships_Q1, townships_as_of_Jun2022 = townships_Q2) %>%
arrange(category) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'") %>%
kable_classic_2("striped")
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 == 0 ~ "not_reached",
q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under"))  %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reach = case_when(total == 0 ~ "not_reached",
total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach") %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach",
"not_reached")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target",
category == "not_reached" ~ "0% of target")) %>%
filter(!is.na(range)) %>%
select(category, range, townships_Q1, townships_as_of_Jun2022 = townships_Q2) %>%
arrange(category) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:60%;'") %>%
kable_classic_2("striped")
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reach = case_when(q1 == 0 ~ "not_reached",
q1 > fs_targeted * 1.1 ~ "overreach",
q1 > fs_targeted * .9 &
q1 <= fs_targeted * 1.1 ~ "on_target",
q1 <= fs_targeted * .9 ~ "under"))  %>%
group_by(reach) %>%
summarise(townships_Q1 = n_distinct(admin3_pcode)) %>%
left_join(
fsc %>%
pivot_wider(names_from = quarter, values_from = new_beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
left_join(fsc %>%
group_by(admin3_pcode = admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries))) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reach = case_when(total == 0 ~ "not_reached",
total > fs_targeted * 1.1 ~ "overreach",
total > fs_targeted * .9 &
total <= fs_targeted * 1.1 ~ "on_target",
total <= fs_targeted * .9 ~ "under")) %>%
group_by(reach) %>%
summarise(townships_Q2 = n_distinct(admin3_pcode)),
by = "reach") %>%
mutate(category = fct_relevel(reach,
c("under",
"on_target",
"overreach",
"not_reached")),
range = case_when(category == "under" ~ "<90% of target",
category == "on_target" ~ ">=90% and < 110% of target",
category == "overreach" ~ ">= 110% of target",
category == "not_reached" ~ "0% of target")) %>%
filter(!is.na(range)) %>%
select(category, range, townships_Q1, townships_as_of_Q2_2022 = townships_Q2) %>%
arrange(category) %>%
kable(caption = "Townships by percentage of target reached",
format = "html",
table.attr = "style='width:70%;'") %>%
kable_classic_2("striped")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
library(tinytex)
theme_set(theme_light())
# kable latex options
options(knitr.table.format = "latex")
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ","),
booktabs = TRUE) %>%
kable_classic_2("striped") %>%
kable_styling(latex_options = c("HOLD_position"))
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total)
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ","),
booktabs = TRUE) %>%
kable_classic_2("striped") %>%
kable_styling(latex_options = c("HOLD_position")) %>%
footnote("Only showing townships with >1% of total beneficiaries",
general_title = "")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ","),
booktabs = TRUE) %>%
kable_classic_2("striped") %>%
# kable_styling(latex_options = c("HOLD_position")) %>%
footnote("Only showing townships with >1% of total beneficiaries",
general_title = "")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total)
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ","),
booktabs = TRUE)
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_Jun_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
kable_styling(latex_options = c("HOLD_position")) %>%
footnote("Only showing townships with >1% of total beneficiaries",
general_title = "")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_as_of_Q2_2022 = total, `%total` = pc_total) %>%
kable(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
footnote("Only showing townships with >1% of total beneficiaries",
general_title = "")
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_as_of_Q2_2022 = total, `%total` = pc_total) %>%
kable()
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_as_of_Q2_2022 = total, `%total` = pc_total)
fsc %>%
group_by(state, township, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(values_from = beneficiaries, names_from = quarter,
values_fill = 0) %>%
mutate(total = q1 + q2,
pc_total = total / sum(total)) %>%
mutate_at(vars(matches("pc")), ~ round(.x * 100, digits = 2)) %>%
arrange(desc(pc_total)) %>%
filter(pc_total >= 1) %>%
select(state, township, Q1 = q1, Q2 = q2,
Total_as_of_Q2_2022 = total, `%total` = pc_total) %>%
kbl(caption = "Top townships by beneficiaries reached",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
footnote("Only showing townships with >1% of total beneficiaries",
general_title = "")
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
mutate(`%_increase` = round((Total_Jun22 - Q1) /Q1 * 100, digits = 2))
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
mutate(`%_increase` = round((Total_Jun22 - Q1) /Q1 * 100, digits = 2)) %>%
kbl(caption = "2022 development beneficiaries",
format.args = list(big.mark = ","),
boooktabs = TRUE)
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
mutate(`%_increase` = round((Total_Jun22 - Q1) /Q1 * 100, digits = 2)) %>%
kbl(caption = "2022 development beneficiaries",
format.args = list(big.mark = ","),
boooktabs = TRUE) %>%
kable_styling(latex_options = c("HOLD_position"))
fsc %>%
mutate(so =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"SO3", so),
humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
filter(humanitarian_or_development == "Development" & activity_red != "food distribution") %>%
group_by(so, quarter) %>%
summarise(beneficiaries = sum(new_beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = quarter,
values_from = beneficiaries,
values_fill = 0) %>%
mutate(total = q1 + q2) %>%
rename_all(.funs = list(str_to_title)) %>%
rename(SO = So) %>%
mutate(total_pc = Total / sum(Total)) %>%
mutate_at(vars(total_pc), ~ round(.x * 100, digits = 2)) %>%
select(SO, Q1, Q2,
Total_Jun22 = Total,
`%_of_total` = total_pc) %>%
adorn_totals("row") %>%
mutate(`%_increase` = round((Total_Jun22 - Q1) /Q1 * 100, digits = 2)) %>%
kbl(caption = "2022 development beneficiaries",
format.args = list(big.mark = ","),
boooktabs = TRUE) %>%
kable_styling(latex_options = c("HOLD_position")) %>%
kable_classic_2("striped")
